/*
-------------------------------
--------  PRACTICO 7  ---------
-------------------------------
*/

USE ENTREGAS;

/*. P.A. QUE DEVUELVA EN PARAMETROS DE SALIDA LA CANTIDAD DE ENTRADA Y 
LA CANTIDAD DE SALDO DE UNA HERRAMIENTA EN EL ALMACEN, 
SI SE TIENEN COMO DATO LA DESCRIPCION DE LA MISMA.*/
DELIMITER //
CREATE PROCEDURE EJERCICIO11 (IN DES VARCHAR(35),
 OUT CEN SMALLINT, OUT CSA SMALLINT)
BEGIN
	IF EXISTS (SELECT * FROM HERRAMIENTA WHERE DESCRIPCION = DES) THEN
		SELECT A.CENTRADA, A.CSALDO INTO CEN, CSA
		FROM ALMACEN A INNER JOIN HERRAMIENTA H 
		ON H.CODIGO = A.CODIGO
		WHERE H.DESCRIPCION = DES;
	ELSE 
		SELECT 'HERRAMIENTA NO EXISTE';
	END IF;
END//
DELIMITER ;

CALL EJERCICIO11 ('MARTILLO', @CANTE, @CANTS);
SELECT @CANTE AS 'CANTIDAD ENTRADA', @CANTS 'CANTIDAD SALDO';


/*P.A. QUE DEVUELVA EN PARAMETROS DE SALIDA LA CANTIDAD TOTAL DE HERRAMIANTAS
 ENTREGADAS LA PRIMERA QUINCENA Y LA CANTIDAD ENTREGADA LA SEGUNDA QUINCENA
 DE UN DETERMINADO MES (1 A 12) Y AÑO QUE SE INTRODUCEN POR PARAMETROS DE ENTRADA*/

DELIMITER //
CREATE PROCEDURE EJERCICIO12(IN AN SMALLINT, MES TINYINT,
	OUT CEN1 INT , OUT CEN2 INT)
BEGIN
IF (AN > 0 AND AN <= YEAR(NOW()) AND MES BETWEEN 1 AND 12) THEN
	IF EXISTS(SELECT * FROM ENTREGA WHERE YEAR(FECHA) = AN AND MONTH(FECHA) = MES)
    THEN
		BEGIN
			SELECT SUM(CANTIDAD) INTO CEN1 FROM ENTREGA
            WHERE FECHA BETWEEN CONCAT(AN,'-',MES,'-','01')
            AND CONCAT(AN,'-',MES,'-','15');
            
            SELECT SUM(CANTIDAD) INTO CEN2 FROM ENTREGA
            WHERE FECHA BETWEEN CONCAT(AN,'-',MES,'-','16') 
            AND CONCAT(AN,'-',MES,'-','31');
		END;
    ELSE 
		SELECT 'NO HAY ENTREGAS REALIZADAS EN AÑO Y MES INTRODUCIDOS';
	END IF;
ELSE 
	SELECT 'AÑO O MES FUERA DE RANGO'; END IF;
END//
DELIMITER ;

CALL EJERCICIO12(2023, 05, @C1, @C2);
SELECT @C1 AS 'CANTIDAD TOTAL PRIMERA QUINCENA', @C2 AS 'CANTIDAD TOTAL SEGUNDA QUINCENA';



/* P.A. QUE DEVUELVA EN PARAMETROS DE SALIDA LAS DESCRIPCIONES DE LAS HERRAMIENTAS CON EL 
PRECIO MAS ALTO Y EL PRECIO MAS BAJO RESPECTIVAMENTE. LA DESCRIPCION DEBE COMENZAR CON UNA 
DE LAS TRES LETRAS INTRODUCIDAS POR PARAMETROS DE ENTRADA.*/
DELIMITER //
CREATE PROCEDURE EJERCICIO13(
    IN A CHAR(1), IN B CHAR(1), IN C CHAR(1),
    OUT DESMAX VARCHAR(35),
    OUT DESMIN VARCHAR(35)
)
BEGIN
IF EXISTS (SELECT DESCRIPCION FROM HERRAMIENTA WHERE DESCRIPCION LIKE CONCAT(A, '%')
OR DESCRIPCION LIKE CONCAT(B, '%') OR DESCRIPCION LIKE CONCAT(C, '%')) THEN
    BEGIN
		SELECT DESCRIPCION INTO DESMAX
		FROM HERRAMIENTA
		WHERE DESCRIPCION LIKE CONCAT(A, '%') OR DESCRIPCION LIKE CONCAT(B, '%')
		OR DESCRIPCION LIKE CONCAT(C, '%')
		ORDER BY PRECIO DESC
		LIMIT 1;
		
		SELECT DESCRIPCION INTO DESMIN
		FROM HERRAMIENTA
		WHERE DESCRIPCION LIKE CONCAT(A, '%') OR DESCRIPCION LIKE CONCAT(B, '%')
		OR DESCRIPCION LIKE CONCAT(C, '%')
		ORDER BY PRECIO ASC
		LIMIT 1;
    END;
ELSE 
	SELECT 'NO EXISTEN HERRAMIENTAS QUE EMPIECEN CON ESAS LETRAS'; END IF;
END //
DELIMITER ;
CALL EJERCICIO13('A', 'D','M',@DPA, @DPB);
SELECT @DPA AS 'PRECIO MAS ALTO', @DPB AS 'PRECIO MAS BAJO';


/*P.A. QUE DEVUELVA EN PARAMETROS DE SALIDA LA DESCRIPCION Y EL PORCENTAJE DE SALDO EN EL 
ALMACEN CON RESPECTO A LA CANTIDAD DE ENTRADA PARA UNA HERRAMIENTA CUYO CODIGO SE TIENEN 
COMO DATO. SE DEBE VERIFICAR QUE LA HERRAMIENTA TENGA SALDO EN EL ALMACEN PARA QUE NO 
DEVUELA UN VALOR NULO*/
DELIMITER //
CREATE PROCEDURE EJERCICIO14(
    IN COD CHAR(6),
    OUT DES VARCHAR(35),
    OUT PSALDO FLOAT
)
BEGIN
IF EXISTS (SELECT CSALDO FROM ALMACEN WHERE CODIGO = COD) THEN

    SELECT H.DESCRIPCION, ((A.CSALDO /A.CENTRADA) * 100)INTO DES, PSALDO
    FROM HERRAMIENTA H INNER JOIN ALMACEN A
    ON H.CODIGO = A.CODIGO
    WHERE A.CODIGO = COD;
    
    ELSE
        SELECT 'ESTA HERRAMIENTA NO TIENE SALDO';END IF;
END //
DELIMITER ;

CALL EJERCICIO14('H-0001', @DES, @PSAL);
SELECT @DES AS DESCRIPCION, @PSAL AS'PORCENTAJE SALDO';








